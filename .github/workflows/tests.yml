name: Run Tests

on:
  push:
    branches: [master, staging]
  pull_request:
    branches: [master, staging]

jobs:
  doctests:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-22.04
          - macos-15
          - windows-2022

        include:
          - os: windows-2022
            cmake-generator: -G "Visual Studio 17 2022" -A x64
            cmake-install: "" #Already installed on hosted runner
            dependencies: "" #Already installed on hosted runner
            make: msbuild countly-tests.vcxproj -t:rebuild -verbosity:diag -property:Configuration=Release && .\Release\countly-tests.exe
          - os: macos-15
            cmake-install: "" #Already installed on hosted runner
            dependencies: "" #Already installed on hosted runner
            make: make ./countly-tests && ./countly-tests
          - os: ubuntu-22.04
            cmake-install: "" #Already installed on hosted runner
            dependencies: |
              sudo apt-get update && sudo apt-get install -y \
                libcurl4-openssl-dev \
                libssl-dev
            make: make ./countly-tests && ./countly-tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: Update submodules
        run: git submodule update --init --recursive

      - name: Install CMake
        run: ${{ matrix.cmake-install }}

      - name: Install dependencies
        run: ${{ matrix.dependencies }}

      - name: Set up MSVC
        if: matrix.os == 'windows-2022'
        uses: microsoft/setup-msbuild@v1

      - name: Build and run tests
        run: |
          cmake -DCOUNTLY_BUILD_TESTS=1 -B build . ${{ matrix.cmake-generator }}
          cd build
          ${{ matrix.make }}
        env:
          CMAKE_POLICY_VERSION_MINIMUM: 3.31
